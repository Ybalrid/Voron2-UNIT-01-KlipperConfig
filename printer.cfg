# This file contains common pin mappings for the BigTreeTech Octopus V2.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section


[include mainsail.cfg]
#[include crowsnest.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_37003D001650344D30353320-if00
restart_method: command
##--------------------------------------------------------------------

#[respond]
#[gcode_macro M117]
#gcode:
#    M118 "{rawparams}"

[display_status]

[gcode_macro MR_NOTIFY]
description: Allows you to send a custom notification via Mobileraker without using the M117 command
gcode:
    {% set msg = "MR_NOTIFY:" ~ (params.TITLE ~ "|" if 'TITLE' in params|upper else "") ~ params.MESSAGE %}

    {% if 'MESSAGE' in params|upper %}
        { action_respond_info(msg) }
    {% else %}
        { action_raise_error('Must provide MESSAGE parameter') }
    {% endif %}

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 8000
max_accel_to_decel: 8000
max_z_velocity: 25          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 600
square_corner_velocity: 5.0

[idle_timeout]
timeout: 7200

[exclude_object]

[firmware_retraction]
retract_length: 0.75
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 50
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 30
#   The speed of unretraction, in mm/s. The default is 10 mm/s.


#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 64
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 64
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
endstop_pin: probe:z_virtual_endstop
position_max: 310
position_min: -5
homing_speed: 35
second_homing_speed: 15
homing_retract_dist: 3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Use 50:10 for Stealthburner/Clockwork 2
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4
min_temp: 10
max_temp: 310
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.05 #Tuned with ABS+ from eSun
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040
max_extrude_only_distance: 999999.0 #TODO can probably put that back to a normal value
max_extrude_cross_section: 5

##  E0 on MOTOR6
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA1
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
## Can set max power to 1, ignore older advice about it, see https://discord.com/channels/460117602945990666/461133450636951552/1059927819615993946 for more details
max_power: 1.0
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe (TAP)
#####################################################################

[probe]
pin: PG15 # From LDO wirering guide, but using TAP
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 35.0
samples: 2
samples_result: average
sample_retract_dist: 2.5
samples_tolerance: 0.01125
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[safe_z_home]
home_xy_position: 175, 175
z_hop: 10

[bed_mesh]
speed: 1000
horizontal_move_z: 3
mesh_min: 10, 10
mesh_max: 340,335
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
zero_reference_position: 175,175

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
## TODO how to check for "back flow?"
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.35

##  Nevermore filter - FAN3
[heater_fan nevermore]
pin: PD13
max_power: 1.0
kick_start_time: 1.0
heater: heater_bed
heater_temp: 65

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
[output_pin caselight]
pin: PD15
pwm:true
shutdown_value: 0
value:0
cycle_time: 0.0025

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[temperature_sensor chamber_temp]
# Chamber Temperature - T1
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF5
min_temp: 0
max_temp: 100
gcode_id: C


[temperature_sensor orange_pi_cpu]
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone0/temp

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420
points:   
   40,  40
   40,  310
   310, 310
   310, 40
speed: 1000
retries: 5
retry_tolerance: 0.0075
max_adjust: 15
horizontal_move_z: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

# Using a display connected to the SBC, not the MCU. Nothing to see here.

#####################################################################
#   Macros
#####################################################################
[include nozzle_scrub.cfg]
[include filament_runout_detection.cfg]
[include bedfans.cfg]
[include KAMP_Settings.cfg]
[include test_probe_accuracy.cfg]
[include stealthburner_leds.cfg]
[include knomi_macros.cfg]

#[include adxl.cfg]
#[include adxl_nozzle.cfg]

#TODO move this to a new config file 
#To handle Z based color changes, or filament changes in general, implement gcode M600:
#NOTE: for octoprint/octoklipper, a `@pause` command should be inserted after M600
[gcode_macro M600]
;default_parameter_X: 32 ;purge buccket location
;default_parameter_Y: 350 ;purge buccket location
;default_parameter_Z: 2.5 ;purge buccket location
gcode:
    {% set X = params.X|default(32)|int %}
    {% set Y = params.Y|default(350)|int %}
    {% set Z = params.Z|default(2.5)|int %}
    STATUS_BUSY
    M400
    PAUSE  X={X} Y={Y}

[gcode_macro RESUME]
rename_existing: KLIPPER_RESUME 
gcode:
    STATUS_CLEANING
    CLEAN_NOZZLE RETRACT=0
    STATUS_PRINTING
    KLIPPER_RESUME


[gcode_macro CANCEL_PRINT]
rename_existing: KLIPPER_CANCEL_PRINT
gcode:
    G0 X32 Y350
    STATUS_CLEANING
    CLEAN_NOZZLE RETRACT=1
    TURN_OFF_HEATERS
    M107
    BED_MESH_CLEAR
    FREE_REVO_NOZZLE
    KLIPPER_CANCEL_PRINT

#TODO add parameter for the PWM power, with default to one
[gcode_macro TURN_CASE_ON]
gcode:
    SET_PIN PIN=caselight VALUE=1.0
    
[gcode_macro TURN_CASE_OFF]
gcode:
    SET_PIN PIN=caselight VALUE=0.0
    
#This macro form a nice tip at the end of the filament, then pull it out of the nozzle. 
#Allowing you to change nozzle once the machine is cold
[gcode_macro FREE_REVO_NOZZLE]
gcode:
    G91 ; relative positionning
    G1 E-2 F2700; retract a bit
    G1 F-2 z0.2 F2400; 
    G1 E2 F800 ;Extrude slightly
    G1 E-18 F800 ;retract filament from meltzone
    G90 ; absolute positioning

#TODO These 2 default macros are not used in my config...
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    G1 Z50 F6000
    QUAD_GANTRY_LEVEL
    G28
    RESTORE_GCODE_STATE NAME=STATE_G32
    
[gcode_macro PRINT_START] #   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
variable_probing:False
gcode:
    {% set BED_TEMP = params.BED|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|float %}
    TURN_CASE_ON

    STATUS_HOMING
    G28
    
    STATUS_HEATING
    G0 X175 Y175 Z20 F18000
    M190 S{BED_TEMP}            ; set and wait for bed to reach temp
    G0 X175 Y175 Z30 F18000
    M109 S150                   ; set to 150, as the probing temperture
    
    STATUS_CLEANING    
    CLEAN_NOZZLE

    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=probing VALUE=True
    STATUS_LEVELING
    G28 Z                       ;Reset z height in case a plastic booger was removed by the clean_nozzle cycle
    QUAD_GANTRY_LEVEL
   
    STATUS_MESHING
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=probing VALUE=False
    
    STATUS_HEATING
    G0 X175 Y175 Z20 F18000
    M109 S{EXTRUDER_TEMP}       ; set and wait for hot end to reach temp
    ;CLEAN_NOZZLE RETRACT=0
    
    G90                         ; absolute positioning
    STATUS_PRINTING
    VORON_PURGE

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    STATUS_READY
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear

    #For next use of TAP, and since nozzle is hot, scrub it 
    STATUS_CLEANING
    CLEAN_NOZZLE RETRACT=3
    FREE_REVO_NOZZLE #This will further retract filament

    TURN_OFF_HEATERS
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    STATUS_PART_READY

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 57.157
#*# pid_ki = 4.380
#*# pid_kd = 186.474
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.187
#*# pid_ki = 2.469
#*# pid_kd = 64.226
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 37.0
#*# shaper_type_y = ei
#*# shaper_freq_y = 41.6
#*#
#*# [probe]
#*# z_offset = -0.791
